# Licensed under the GNU General Public License v. 3 (the "License")
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.gnu.org/licenses/gpl-3.0.html
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Copyright (C) 2025-2025 xqyjlj<xqyjlj@126.com>
#
# @author      xqyjlj
# @file        build_release.yml
#
# Change Logs:
# Date           Author       Notes
# ------------   ----------   -----------------------------------------------
# 2025-01-16     xqyjlj       initial version
#

name: build_release

on:
  push:
  pull_request:

jobs:
  build:
    name: üß™ build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: examples/led
            file: led.csp
    env:
      QT_ASSUME_STDERR_HAS_CONSOLE: 1
      QT_QPA_PLATFORM: "offscreen"

    steps:
      - name: ‚¨áÔ∏è checkout csp_hal_apm32f1
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: ‚¨áÔ∏è init env packages
        shell: bash
        run: |
          sudo apt update
          sudo apt install libegl1-mesa-dev libegl1 wget

      - name: ‚¨áÔ∏è install csp
        uses: csplink/action_setup_csp@master

      - name: ‚¨áÔ∏è install csp package
        shell: bash
        run: |
          csp --version
          wget https://github.com/csplink/toolchains/releases/download/arm-none-eabi/gcc-arm-none-eabi-10.3.1.linux.csppack -O gcc-arm-none-eabi.linux.csppack
          csp install -p gcc-arm-none-eabi.linux.csppack
          csp install -p .

      - name: üë∑ build
        shell: bash
        run: |
          pushd ${{ matrix.target }}
            csp gen -f ${{ matrix.file }}
            mkdir -pv build.cmake
            pushd build.cmake
              cmake .. -DCMAKE_BUILD_TYPE=Release
              make -j$(nproc) VERBOSE=1
              mkdir -pv cross/arm/release
              mv *.elf cross/arm/release/
              mv *.bin cross/arm/release/
              mv *.hex cross/arm/release/
              mv *.map cross/arm/release/

              cmake .. -DCMAKE_BUILD_TYPE=Debug
              make -j$(nproc) VERBOSE=1
              mkdir -pv cross/arm/debug
              mv *.elf cross/arm/debug/
              mv *.bin cross/arm/debug/
              mv *.hex cross/arm/debug/
              mv *.map cross/arm/debug/
            popd
          popd

      - name: ‚¨ÜÔ∏è upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ${{ matrix.target }}/build.cmake/cross/arm
  release:
    name: ‚¨ÜÔ∏è release
    runs-on: ubuntu-latest
    needs: [ build ]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: ‚¨áÔ∏è checkout csp_hal_apm32f1
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: ‚¨áÔ∏è init env packages
        shell: bash
        run: |
          sudo apt update
          sudo apt install 7zip

      - name: üë∑ deploy
        shell: bash
        run: |
          sed -i 's/latest/${{ github.ref_name }}/g' ./csp_hal_apm32f1.csppdsc
          source tools/deploy.sh && deploy csp_hal_apm32f1-${{ github.ref_name }}
          7z a -t7z -mx=9 -m0=lzma2 -mf=off csp_hal_apm32f1-${{ github.ref_name }}.csppack csp_hal_apm32f1-${{ github.ref_name }}

      - name: ‚¨ÜÔ∏è create release
        uses: softprops/action-gh-release@v2
        with:
          name: csp_hal_apm32f1 ${{ github.ref_name }}
          draft: true
          prerelease: true
          token: ${{ secrets.RELEASE_TOKEN }}
          files: |
            csp_hal_apm32f1-${{ github.ref_name }}.csppack
