{#
 # Licensed under the GNU General Public License v. 3 (the "License")
 # You may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
 #
 #     https://www.gnu.org/licenses/gpl-3.0.html
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
 # Copyright (C) 2024-2024 xqyjlj<xqyjlj@126.com>
 #
 # @author      xqyjlj
 # @file        isr_vector.c.j2
 #
 # Change Logs:
 # Date           Author       Notes
 # ------------   ----------   -----------------------------------------------
 # 2024-12-12     xqyjlj       initial version
 #
 #}
{%- extends "csp-file-base.c.j2" %}

{%- set info = CSP.project|chip_info %}

{%- block includes %}

#include <stdint.h>

#include "csp/compiler.h"
{%  endblock %}

{%- block extern %}

extern uint32_t __default_stack__;

void Reset_Handler(void);
void Default_Handler(void);

/* clang-format off */

#if defined(__IAR_SYSTEMS_ICC__)
# define WEAK_ALIAS_DEFAULT_HANDLER
{%- if info.class == "APM32F10X_MD" %}
# pragma weak NMI_Handler                  = Default_Handler
# pragma weak HardFault_Handler            = Default_Handler
# pragma weak MemManage_Handler            = Default_Handler
# pragma weak BusFault_Handler             = Default_Handler
# pragma weak UsageFault_Handler           = Default_Handler
# pragma weak SVC_Handler                  = Default_Handler
# pragma weak DebugMon_Handler             = Default_Handler
# pragma weak PendSV_Handler               = Default_Handler
# pragma weak SysTick_Handler              = Default_Handler
# pragma weak WWDT_IRQHandler              = Default_Handler
# pragma weak PVD_IRQHandler               = Default_Handler
# pragma weak TAMPER_IRQHandler            = Default_Handler
# pragma weak RTC_IRQHandler               = Default_Handler
# pragma weak FLASH_IRQHandler             = Default_Handler
# pragma weak RCM_IRQHandler               = Default_Handler
# pragma weak EINT0_IRQHandler             = Default_Handler
# pragma weak EINT1_IRQHandler             = Default_Handler
# pragma weak EINT2_IRQHandler             = Default_Handler
# pragma weak EINT3_IRQHandler             = Default_Handler
# pragma weak EINT4_IRQHandler             = Default_Handler
# pragma weak DMA1_Channel1_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel2_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel3_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel4_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel5_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel6_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel7_IRQHandler     = Default_Handler
# pragma weak ADC1_2_IRQHandler            = Default_Handler
# pragma weak USBD1_HP_CAN1_TX_IRQHandler  = Default_Handler
# pragma weak USBD1_LP_CAN1_RX0_IRQHandler = Default_Handler
# pragma weak CAN1_RX1_IRQHandler          = Default_Handler
# pragma weak CAN1_SCE_IRQHandler          = Default_Handler
# pragma weak EINT9_5_IRQHandler           = Default_Handler
# pragma weak TMR1_BRK_IRQHandler          = Default_Handler
# pragma weak TMR1_UP_IRQHandler           = Default_Handler
# pragma weak TMR1_TRG_COM_IRQHandler      = Default_Handler
# pragma weak TMR1_CC_IRQHandler           = Default_Handler
# pragma weak TMR2_IRQHandler              = Default_Handler
# pragma weak TMR3_IRQHandler              = Default_Handler
# pragma weak TMR4_IRQHandler              = Default_Handler
# pragma weak I2C1_EV_IRQHandler           = Default_Handler
# pragma weak I2C1_ER_IRQHandler           = Default_Handler
# pragma weak I2C2_EV_IRQHandler           = Default_Handler
# pragma weak I2C2_ER_IRQHandler           = Default_Handler
# pragma weak SPI1_IRQHandler              = Default_Handler
# pragma weak SPI2_IRQHandler              = Default_Handler
# pragma weak USART1_IRQHandler            = Default_Handler
# pragma weak USART2_IRQHandler            = Default_Handler
# pragma weak USART3_IRQHandler            = Default_Handler
# pragma weak EINT15_10_IRQHandler         = Default_Handler
# pragma weak RTC_Alarm_IRQHandler         = Default_Handler
# pragma weak USBDWakeUp_IRQHandler        = Default_Handler
# pragma weak FPU_IRQHandler               = Default_Handler
# pragma weak QSPI_IRQHandler              = Default_Handler
# pragma weak USBD2_HP_IRQHandler          = Default_Handler
# pragma weak USBD2_LP_IRQHandler          = Default_Handler
{%- elif info.class == "APM32F10X_HD" %}
# pragma weak NMI_Handler                  = Default_Handler
# pragma weak HardFault_Handler            = Default_Handler
# pragma weak MemManage_Handler            = Default_Handler
# pragma weak BusFault_Handler             = Default_Handler
# pragma weak UsageFault_Handler           = Default_Handler
# pragma weak SVC_Handler                  = Default_Handler
# pragma weak DebugMon_Handler             = Default_Handler
# pragma weak PendSV_Handler               = Default_Handler
# pragma weak SysTick_Handler              = Default_Handler
# pragma weak WWDT_IRQHandler              = Default_Handler
# pragma weak PVD_IRQHandler               = Default_Handler
# pragma weak TAMPER_IRQHandler            = Default_Handler
# pragma weak RTC_IRQHandler               = Default_Handler
# pragma weak FLASH_IRQHandler             = Default_Handler
# pragma weak RCM_IRQHandler               = Default_Handler
# pragma weak EINT0_IRQHandler             = Default_Handler
# pragma weak EINT1_IRQHandler             = Default_Handler
# pragma weak EINT2_IRQHandler             = Default_Handler
# pragma weak EINT3_IRQHandler             = Default_Handler
# pragma weak EINT4_IRQHandler             = Default_Handler
# pragma weak DMA1_Channel1_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel2_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel3_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel4_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel5_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel6_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel7_IRQHandler     = Default_Handler
# pragma weak ADC1_2_IRQHandler            = Default_Handler
# pragma weak USBD1_HP_CAN1_TX_IRQHandler  = Default_Handler
# pragma weak USBD1_LP_CAN1_RX0_IRQHandler = Default_Handler
# pragma weak CAN1_RX1_IRQHandler          = Default_Handler
# pragma weak CAN1_SCE_IRQHandler          = Default_Handler
# pragma weak EINT9_5_IRQHandler           = Default_Handler
# pragma weak TMR1_BRK_IRQHandler          = Default_Handler
# pragma weak TMR1_UP_IRQHandler           = Default_Handler
# pragma weak TMR1_TRG_COM_IRQHandler      = Default_Handler
# pragma weak TMR1_CC_IRQHandler           = Default_Handler
# pragma weak TMR2_IRQHandler              = Default_Handler
# pragma weak TMR3_IRQHandler              = Default_Handler
# pragma weak TMR4_IRQHandler              = Default_Handler
# pragma weak I2C1_EV_IRQHandler           = Default_Handler
# pragma weak I2C1_ER_IRQHandler           = Default_Handler
# pragma weak I2C2_EV_IRQHandler           = Default_Handler
# pragma weak I2C2_ER_IRQHandler           = Default_Handler
# pragma weak SPI1_IRQHandler              = Default_Handler
# pragma weak SPI2_IRQHandler              = Default_Handler
# pragma weak USART1_IRQHandler            = Default_Handler
# pragma weak USART2_IRQHandler            = Default_Handler
# pragma weak USART3_IRQHandler            = Default_Handler
# pragma weak EINT15_10_IRQHandler         = Default_Handler
# pragma weak RTC_Alarm_IRQHandler         = Default_Handler
# pragma weak USBDWakeUp_IRQHandler        = Default_Handler
# pragma weak TMR8_BRK_IRQHandler          = Default_Handler
# pragma weak TMR8_UP_IRQHandler           = Default_Handler
# pragma weak TMR8_TRG_COM_IRQHandler      = Default_Handler
# pragma weak TMR8_CC_IRQHandler           = Default_Handler
# pragma weak ADC3_IRQHandler              = Default_Handler
# pragma weak FSMC_IRQHandler              = Default_Handler
# pragma weak SDIO_IRQHandler              = Default_Handler
# pragma weak TMR5_IRQHandler              = Default_Handler
# pragma weak SPI3_IRQHandler              = Default_Handler
# pragma weak UART4_IRQHandler             = Default_Handler
# pragma weak UART5_IRQHandler             = Default_Handler
# pragma weak TMR6_IRQHandler              = Default_Handler
# pragma weak TMR7_IRQHandler              = Default_Handler
# pragma weak DMA2_Channel1_IRQHandler     = Default_Handler
# pragma weak DMA2_Channel2_IRQHandler     = Default_Handler
# pragma weak DMA2_Channel3_IRQHandler     = Default_Handler
# pragma weak DMA2_Channel4_5_IRQHandler   = Default_Handler
# pragma weak USBD2_HP_CAN2_TX_IRQHandler  = Default_Handler
# pragma weak USBD2_LP_CAN2_RX0_IRQHandler = Default_Handler
# pragma weak CAN2_RX1_IRQHandler          = Default_Handler
# pragma weak CAN2_SCE_IRQHandler          = Default_Handler
{%- elif info.class == "APM32F10X_CL" %}
# pragma weak NMI_Handler                  = Default_Handler
# pragma weak HardFault_Handler            = Default_Handler
# pragma weak MemManage_Handler            = Default_Handler
# pragma weak BusFault_Handler             = Default_Handler
# pragma weak UsageFault_Handler           = Default_Handler
# pragma weak SVC_Handler                  = Default_Handler
# pragma weak DebugMon_Handler             = Default_Handler
# pragma weak PendSV_Handler               = Default_Handler
# pragma weak SysTick_Handler              = Default_Handler
# pragma weak WWDT_IRQHandler              = Default_Handler
# pragma weak PVD_IRQHandler               = Default_Handler
# pragma weak TAMPER_IRQHandler            = Default_Handler
# pragma weak RTC_IRQHandler               = Default_Handler
# pragma weak FLASH_IRQHandler             = Default_Handler
# pragma weak RCM_IRQHandler               = Default_Handler
# pragma weak EINT0_IRQHandler             = Default_Handler
# pragma weak EINT1_IRQHandler             = Default_Handler
# pragma weak EINT2_IRQHandler             = Default_Handler
# pragma weak EINT3_IRQHandler             = Default_Handler
# pragma weak EINT4_IRQHandler             = Default_Handler
# pragma weak DMA1_Channel1_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel2_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel3_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel4_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel5_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel6_IRQHandler     = Default_Handler
# pragma weak DMA1_Channel7_IRQHandler     = Default_Handler
# pragma weak ADC1_2_IRQHandler            = Default_Handler
# pragma weak CAN1_TX_IRQHandler           = Default_Handler
# pragma weak CAN1_RX0_IRQHandler          = Default_Handler
# pragma weak CAN1_RX1_IRQHandler          = Default_Handler
# pragma weak CAN1_SCE_IRQHandler          = Default_Handler
# pragma weak EINT9_5_IRQHandler           = Default_Handler
# pragma weak TMR1_BRK_IRQHandler          = Default_Handler
# pragma weak TMR1_UP_IRQHandler           = Default_Handler
# pragma weak TMR1_TRG_COM_IRQHandler      = Default_Handler
# pragma weak TMR1_CC_IRQHandler           = Default_Handler
# pragma weak TMR2_IRQHandler              = Default_Handler
# pragma weak TMR3_IRQHandler              = Default_Handler
# pragma weak TMR4_IRQHandler              = Default_Handler
# pragma weak I2C1_EV_IRQHandler           = Default_Handler
# pragma weak I2C1_ER_IRQHandler           = Default_Handler
# pragma weak I2C2_EV_IRQHandler           = Default_Handler
# pragma weak I2C2_ER_IRQHandler           = Default_Handler
# pragma weak SPI1_IRQHandler              = Default_Handler
# pragma weak SPI2_IRQHandler              = Default_Handler
# pragma weak USART1_IRQHandler            = Default_Handler
# pragma weak USART2_IRQHandler            = Default_Handler
# pragma weak USART3_IRQHandler            = Default_Handler
# pragma weak EINT15_10_IRQHandler         = Default_Handler
# pragma weak RTC_Alarm_IRQHandler         = Default_Handler
# pragma weak OTG_FS_WKUP_IRQHandler       = Default_Handler
# pragma weak TMR5_IRQHandler              = Default_Handler
# pragma weak SPI3_IRQHandler              = Default_Handler
# pragma weak UART4_IRQHandler             = Default_Handler
# pragma weak UART5_IRQHandler             = Default_Handler
# pragma weak TMR6_IRQHandler              = Default_Handler
# pragma weak TMR7_IRQHandler              = Default_Handler
# pragma weak DMA2_Channel1_IRQHandler     = Default_Handler
# pragma weak DMA2_Channel2_IRQHandler     = Default_Handler
# pragma weak DMA2_Channel3_IRQHandler     = Default_Handler
# pragma weak DMA2_Channel4_IRQHandler     = Default_Handler
# pragma weak DMA2_Channel5_IRQHandler     = Default_Handler
# pragma weak ETH_IRQHandler               = Default_Handler
# pragma weak ETH_WKUP_IRQHandler          = Default_Handler
# pragma weak CAN2_TX_IRQHandler           = Default_Handler
# pragma weak CAN2_RX0_IRQHandler          = Default_Handler
# pragma weak CAN2_RX1_IRQHandler          = Default_Handler
# pragma weak CAN2_SCE_IRQHandler          = Default_Handler
# pragma weak OTG_FS_IRQHandler            = Default_Handler
{%- endif %}
#else
# define WEAK_ALIAS_DEFAULT_HANDLER __attribute__((weak, alias("Default_Handler")))
#endif
{%- if info.class == "APM32F10X_MD" %}
void NMI_Handler(void)                      WEAK_ALIAS_DEFAULT_HANDLER;
void HardFault_Handler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void MemManage_Handler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void BusFault_Handler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void UsageFault_Handler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void SVC_Handler(void)                      WEAK_ALIAS_DEFAULT_HANDLER;
void DebugMon_Handler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void PendSV_Handler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void SysTick_Handler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void WWDT_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void PVD_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void TAMPER_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void RTC_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void FLASH_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void RCM_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void EINT0_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT1_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT2_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT3_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT4_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel1_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel2_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel3_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel4_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel5_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel6_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel7_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void ADC1_2_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void USBD1_HP_CAN1_TX_IRQHandler(void)      WEAK_ALIAS_DEFAULT_HANDLER;
void USBD1_LP_CAN1_RX0_IRQHandler(void)     WEAK_ALIAS_DEFAULT_HANDLER;
void CAN1_RX1_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void CAN1_SCE_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void EINT9_5_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_BRK_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_UP_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_TRG_COM_IRQHandler(void)          WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_CC_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR2_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void TMR3_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void TMR4_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void I2C1_EV_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void I2C1_ER_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void I2C2_EV_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void I2C2_ER_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void SPI1_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void SPI2_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void USART1_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void USART2_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void USART3_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void EINT15_10_IRQHandler(void)             WEAK_ALIAS_DEFAULT_HANDLER;
void RTC_Alarm_IRQHandler(void)             WEAK_ALIAS_DEFAULT_HANDLER;
void USBDWakeUp_IRQHandler(void)            WEAK_ALIAS_DEFAULT_HANDLER;
void FPU_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void QSPI_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void USBD2_HP_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void USBD2_LP_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
{%- elif info.class == "APM32F10X_HD" %}
void NMI_Handler(void)                      WEAK_ALIAS_DEFAULT_HANDLER;
void HardFault_Handler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void MemManage_Handler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void BusFault_Handler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void UsageFault_Handler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void SVC_Handler(void)                      WEAK_ALIAS_DEFAULT_HANDLER;
void DebugMon_Handler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void PendSV_Handler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void SysTick_Handler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void WWDT_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void PVD_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void TAMPER_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void RTC_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void FLASH_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void RCM_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void EINT0_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT1_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT2_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT3_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT4_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel1_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel2_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel3_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel4_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel5_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel6_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel7_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void ADC1_2_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void USBD1_HP_CAN1_TX_IRQHandler(void)      WEAK_ALIAS_DEFAULT_HANDLER;
void USBD1_LP_CAN1_RX0_IRQHandler(void)     WEAK_ALIAS_DEFAULT_HANDLER;
void CAN1_RX1_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void CAN1_SCE_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void EINT9_5_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_BRK_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_UP_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_TRG_COM_IRQHandler(void)          WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_CC_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR2_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void TMR3_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void TMR4_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void I2C1_EV_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void I2C1_ER_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void I2C2_EV_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void I2C2_ER_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void SPI1_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void SPI2_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void USART1_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void USART2_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void USART3_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void EINT15_10_IRQHandler(void)             WEAK_ALIAS_DEFAULT_HANDLER;
void RTC_Alarm_IRQHandler(void)             WEAK_ALIAS_DEFAULT_HANDLER;
void USBDWakeUp_IRQHandler(void)            WEAK_ALIAS_DEFAULT_HANDLER;
void TMR8_BRK_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void TMR8_UP_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR8_TRG_COM_IRQHandler(void)          WEAK_ALIAS_DEFAULT_HANDLER;
void TMR8_CC_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void ADC3_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void FSMC_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void SDIO_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void TMR5_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void SPI3_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void UART4_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void UART5_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void TMR6_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void TMR7_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void DMA2_Channel1_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA2_Channel2_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA2_Channel3_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA2_Channel4_5_IRQHandler(void)       WEAK_ALIAS_DEFAULT_HANDLER;
void USBD2_HP_CAN2_TX_IRQHandler(void)      WEAK_ALIAS_DEFAULT_HANDLER;
void USBD2_LP_CAN2_RX0_IRQHandler(void)     WEAK_ALIAS_DEFAULT_HANDLER;
void CAN2_RX1_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void CAN2_SCE_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
{%- elif info.class == "APM32F10X_CL" %}
void NMI_Handler(void)                      WEAK_ALIAS_DEFAULT_HANDLER;
void HardFault_Handler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void MemManage_Handler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void BusFault_Handler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void UsageFault_Handler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void SVC_Handler(void)                      WEAK_ALIAS_DEFAULT_HANDLER;
void DebugMon_Handler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void PendSV_Handler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void SysTick_Handler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void WWDT_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void PVD_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void TAMPER_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void RTC_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void FLASH_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void RCM_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void EINT0_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT1_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT2_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT3_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void EINT4_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel1_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel2_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel3_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel4_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel5_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel6_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA1_Channel7_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void ADC1_2_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void CAN1_TX_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void CAN1_RX0_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void CAN1_RX1_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void CAN1_SCE_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void EINT9_5_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_BRK_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_UP_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_TRG_COM_IRQHandler(void)          WEAK_ALIAS_DEFAULT_HANDLER;
void TMR1_CC_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void TMR2_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void TMR3_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void TMR4_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void I2C1_EV_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void I2C1_ER_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void I2C2_EV_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void I2C2_ER_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void SPI1_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void SPI2_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void USART1_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void USART2_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void USART3_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
void EINT15_10_IRQHandler(void)             WEAK_ALIAS_DEFAULT_HANDLER;
void RTC_Alarm_IRQHandler(void)             WEAK_ALIAS_DEFAULT_HANDLER;
void OTG_FS_WKUP_IRQHandler(void)           WEAK_ALIAS_DEFAULT_HANDLER;
void TMR5_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void SPI3_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void UART4_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void UART5_IRQHandler(void)                 WEAK_ALIAS_DEFAULT_HANDLER;
void TMR6_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void TMR7_IRQHandler(void)                  WEAK_ALIAS_DEFAULT_HANDLER;
void DMA2_Channel1_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA2_Channel2_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA2_Channel3_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA2_Channel4_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void DMA2_Channel5_IRQHandler(void)         WEAK_ALIAS_DEFAULT_HANDLER;
void ETH_IRQHandler(void)                   WEAK_ALIAS_DEFAULT_HANDLER;
void ETH_WKUP_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void CAN2_TX_IRQHandler(void)               WEAK_ALIAS_DEFAULT_HANDLER;
void CAN2_RX0_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void CAN2_RX1_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void CAN2_SCE_IRQHandler(void)              WEAK_ALIAS_DEFAULT_HANDLER;
void OTG_FS_IRQHandler(void)                WEAK_ALIAS_DEFAULT_HANDLER;
{%- endif %}

/* clang-format on */
{%  endblock %}

{%- block variables %}

const uint32_t *_csp_isr_vector[] CSP_SECTION(".isr_vector") = {
{%- if info.class == "APM32F10X_MD" %}
    (uint32_t *)&__default_stack__,           /*!< Top of Stack */
    (uint32_t *)Reset_Handler,                /*!< -15, Reset Handler */
    (uint32_t *)NMI_Handler,                  /*!< -14, NMI Handler */
    (uint32_t *)HardFault_Handler,            /*!< -13, Hard Fault Handler */
    (uint32_t *)MemManage_Handler,            /*!< -12, MPU Fault Handler */
    (uint32_t *)BusFault_Handler,             /*!< -11, Bus Fault Handler */
    (uint32_t *)UsageFault_Handler,           /*!< -10, Usage Fault Handler */
    (uint32_t *)0,                            /*!< -9, Reserved */
    (uint32_t *)0,                            /*!< -8, Reserved */
    (uint32_t *)0,                            /*!< -7, Reserved */
    (uint32_t *)0,                            /*!< -6, Reserved */
    (uint32_t *)SVC_Handler,                  /*!< -5, SVCall Handler */
    (uint32_t *)DebugMon_Handler,             /*!< -4, Debug Monitor Handler */
    (uint32_t *)0,                            /*!< -3, Reserved */
    (uint32_t *)PendSV_Handler,               /*!< -2, PendSV Handler */
    (uint32_t *)SysTick_Handler,              /*!< -1, SysTick Handler */
    (uint32_t *)WWDT_IRQHandler,              /*!< 0, Window Watchdog */
    (uint32_t *)PVD_IRQHandler,               /*!< 1, PVD through EINT Line detect */
    (uint32_t *)TAMPER_IRQHandler,            /*!< 2, Tamper */
    (uint32_t *)RTC_IRQHandler,               /*!< 3, RTC */
    (uint32_t *)FLASH_IRQHandler,             /*!< 4, Flash */
    (uint32_t *)RCM_IRQHandler,               /*!< 5, RCM */
    (uint32_t *)EINT0_IRQHandler,             /*!< 6, EINT Line 0 */
    (uint32_t *)EINT1_IRQHandler,             /*!< 7, EINT Line 1 */
    (uint32_t *)EINT2_IRQHandler,             /*!< 8, EINT Line 2 */
    (uint32_t *)EINT3_IRQHandler,             /*!< 9, EINT Line 3 */
    (uint32_t *)EINT4_IRQHandler,             /*!< 10, EINT Line 4 */
    (uint32_t *)DMA1_Channel1_IRQHandler,     /*!< 11, DMA1 Channel 1 */
    (uint32_t *)DMA1_Channel2_IRQHandler,     /*!< 12, DMA1 Channel 2 */
    (uint32_t *)DMA1_Channel3_IRQHandler,     /*!< 13, DMA1 Channel 3 */
    (uint32_t *)DMA1_Channel4_IRQHandler,     /*!< 14, DMA1 Channel 4 */
    (uint32_t *)DMA1_Channel5_IRQHandler,     /*!< 15, DMA1 Channel 5 */
    (uint32_t *)DMA1_Channel6_IRQHandler,     /*!< 16, DMA1 Channel 6 */
    (uint32_t *)DMA1_Channel7_IRQHandler,     /*!< 17, DMA1 Channel 7 */
    (uint32_t *)ADC1_2_IRQHandler,            /*!< 18, ADC1_2 */
    (uint32_t *)USBD1_HP_CAN1_TX_IRQHandler,  /*!< 19, USBD1 High Priority or CAN1 TX */
    (uint32_t *)USBD1_LP_CAN1_RX0_IRQHandler, /*!< 20, USBD1 Low  Priority or CAN1 RX0 */
    (uint32_t *)CAN1_RX1_IRQHandler,          /*!< 21, CAN1 RX1 */
    (uint32_t *)CAN1_SCE_IRQHandler,          /*!< 22, CAN1 SCE */
    (uint32_t *)EINT9_5_IRQHandler,           /*!< 23, EINT Line 9..5 */
    (uint32_t *)TMR1_BRK_IRQHandler,          /*!< 24, TMR1 Break */
    (uint32_t *)TMR1_UP_IRQHandler,           /*!< 25, TMR1 Update */
    (uint32_t *)TMR1_TRG_COM_IRQHandler,      /*!< 26, TMR1 Trigger and Commutation */
    (uint32_t *)TMR1_CC_IRQHandler,           /*!< 27, TMR1 Capture Compare */
    (uint32_t *)TMR2_IRQHandler,              /*!< 28, TMR2 */
    (uint32_t *)TMR3_IRQHandler,              /*!< 29, TMR3 */
    (uint32_t *)TMR4_IRQHandler,              /*!< 30, TMR4 */
    (uint32_t *)I2C1_EV_IRQHandler,           /*!< 31, I2C1 Event */
    (uint32_t *)I2C1_ER_IRQHandler,           /*!< 32, I2C1 Error */
    (uint32_t *)I2C2_EV_IRQHandler,           /*!< 33, I2C2 Event */
    (uint32_t *)I2C2_ER_IRQHandler,           /*!< 34, I2C2 Error */
    (uint32_t *)SPI1_IRQHandler,              /*!< 35, SPI1 */
    (uint32_t *)SPI2_IRQHandler,              /*!< 36, SPI2 */
    (uint32_t *)USART1_IRQHandler,            /*!< 37, USART1 */
    (uint32_t *)USART2_IRQHandler,            /*!< 38, USART2 */
    (uint32_t *)USART3_IRQHandler,            /*!< 39, USART3 */
    (uint32_t *)EINT15_10_IRQHandler,         /*!< 40, EINT Line 15..10 */
    (uint32_t *)RTC_Alarm_IRQHandler,         /*!< 41, RTC Alarm through EINT Line */
    (uint32_t *)USBDWakeUp_IRQHandler,        /*!< 42, USBD Wakeup from suspend */
    (uint32_t *)FPU_IRQHandler,               /*!< 43, FPU */
    (uint32_t *)QSPI_IRQHandler,              /*!< 44, QSPI */
    (uint32_t *)USBD2_HP_IRQHandler,          /*!< 45, USBD2 High Priority */
    (uint32_t *)USBD2_LP_IRQHandler,          /*!< 46, USBD2 Low Priority */
{%- elif info.class == "APM32F10X_HD" %}
    (uint32_t *)&__default_stack__,           /*!< Top of Stack */
    (uint32_t *)Reset_Handler,                /*!< -15, Reset Handler */
    (uint32_t *)NMI_Handler,                  /*!< -14, NMI Handler */
    (uint32_t *)HardFault_Handler,            /*!< -13, Hard Fault Handler */
    (uint32_t *)MemManage_Handler,            /*!< -12, MPU Fault Handler */
    (uint32_t *)BusFault_Handler,             /*!< -11, Bus Fault Handler */
    (uint32_t *)UsageFault_Handler,           /*!< -10, Usage Fault Handler */
    (uint32_t *)0,                            /*!< -9, Reserved */
    (uint32_t *)0,                            /*!< -8, Reserved */
    (uint32_t *)0,                            /*!< -7, Reserved */
    (uint32_t *)0,                            /*!< -6, Reserved */
    (uint32_t *)SVC_Handler,                  /*!< -5, SVCall Handler */
    (uint32_t *)DebugMon_Handler,             /*!< -4, Debug Monitor Handler */
    (uint32_t *)0,                            /*!< -3, Reserved */
    (uint32_t *)PendSV_Handler,               /*!< -2, PendSV Handler */
    (uint32_t *)SysTick_Handler,              /*!< -1, SysTick Handler */
    (uint32_t *)WWDT_IRQHandler,              /*!< 0, Window Watchdog */
    (uint32_t *)PVD_IRQHandler,               /*!< 1, PVD through EINT Line detect */
    (uint32_t *)TAMPER_IRQHandler,            /*!< 2, Tamper */
    (uint32_t *)RTC_IRQHandler,               /*!< 3, RTC */
    (uint32_t *)FLASH_IRQHandler,             /*!< 4, Flash */
    (uint32_t *)RCM_IRQHandler,               /*!< 5, RCM */
    (uint32_t *)EINT0_IRQHandler,             /*!< 6, EINT Line 0 */
    (uint32_t *)EINT1_IRQHandler,             /*!< 7, EINT Line 1 */
    (uint32_t *)EINT2_IRQHandler,             /*!< 8, EINT Line 2 */
    (uint32_t *)EINT3_IRQHandler,             /*!< 9, EINT Line 3 */
    (uint32_t *)EINT4_IRQHandler,             /*!< 10, EINT Line 4 */
    (uint32_t *)DMA1_Channel1_IRQHandler,     /*!< 11, DMA1 Channel 1 */
    (uint32_t *)DMA1_Channel2_IRQHandler,     /*!< 12, DMA1 Channel 2 */
    (uint32_t *)DMA1_Channel3_IRQHandler,     /*!< 13, DMA1 Channel 3 */
    (uint32_t *)DMA1_Channel4_IRQHandler,     /*!< 14, DMA1 Channel 4 */
    (uint32_t *)DMA1_Channel5_IRQHandler,     /*!< 15, DMA1 Channel 5 */
    (uint32_t *)DMA1_Channel6_IRQHandler,     /*!< 16, DMA1 Channel 6 */
    (uint32_t *)DMA1_Channel7_IRQHandler,     /*!< 17, DMA1 Channel 7 */
    (uint32_t *)ADC1_2_IRQHandler,            /*!< 18, ADC1 & ADC2 */
    (uint32_t *)USBD1_HP_CAN1_TX_IRQHandler,  /*!< 19, USBD1 High Priority or CAN1 TX */
    (uint32_t *)USBD1_LP_CAN1_RX0_IRQHandler, /*!< 20, USBD1 Low  Priority or CAN1 RX0 */
    (uint32_t *)CAN1_RX1_IRQHandler,          /*!< 21, CAN1 RX1 */
    (uint32_t *)CAN1_SCE_IRQHandler,          /*!< 22, CAN1 SCE */
    (uint32_t *)EINT9_5_IRQHandler,           /*!< 23, EINT Line 9..5 */
    (uint32_t *)TMR1_BRK_IRQHandler,          /*!< 24, TMR1 Break */
    (uint32_t *)TMR1_UP_IRQHandler,           /*!< 25, TMR1 Update */
    (uint32_t *)TMR1_TRG_COM_IRQHandler,      /*!< 26, TMR1 Trigger and Commutation */
    (uint32_t *)TMR1_CC_IRQHandler,           /*!< 27, TMR1 Capture Compare */
    (uint32_t *)TMR2_IRQHandler,              /*!< 28, TMR2 */
    (uint32_t *)TMR3_IRQHandler,              /*!< 29, TMR3 */
    (uint32_t *)TMR4_IRQHandler,              /*!< 30, TMR4 */
    (uint32_t *)I2C1_EV_IRQHandler,           /*!< 31, I2C1 Event */
    (uint32_t *)I2C1_ER_IRQHandler,           /*!< 32, I2C1 Error */
    (uint32_t *)I2C2_EV_IRQHandler,           /*!< 33, I2C2 Event */
    (uint32_t *)I2C2_ER_IRQHandler,           /*!< 34, I2C2 Error */
    (uint32_t *)SPI1_IRQHandler,              /*!< 35, SPI1 */
    (uint32_t *)SPI2_IRQHandler,              /*!< 36, SPI2 */
    (uint32_t *)USART1_IRQHandler,            /*!< 37, USART1 */
    (uint32_t *)USART2_IRQHandler,            /*!< 38, USART2 */
    (uint32_t *)USART3_IRQHandler,            /*!< 39, USART3 */
    (uint32_t *)EINT15_10_IRQHandler,         /*!< 40, EINT Line 15..10 */
    (uint32_t *)RTC_Alarm_IRQHandler,         /*!< 41, RTC Alarm through EINT Line */
    (uint32_t *)USBDWakeUp_IRQHandler,        /*!< 42, USBD Wakeup from suspend */
    (uint32_t *)TMR8_BRK_IRQHandler,          /*!< 43, TMR8 Break */
    (uint32_t *)TMR8_UP_IRQHandler,           /*!< 44, TMR8 Update */
    (uint32_t *)TMR8_TRG_COM_IRQHandler,      /*!< 45, TMR8 Trigger and Commutation */
    (uint32_t *)TMR8_CC_IRQHandler,           /*!< 46, TMR8 Capture Compare */
    (uint32_t *)ADC3_IRQHandler,              /*!< 47, ADC3 */
    (uint32_t *)FSMC_IRQHandler,              /*!< 48, EMMC */
    (uint32_t *)SDIO_IRQHandler,              /*!< 49, SDIO */
    (uint32_t *)TMR5_IRQHandler,              /*!< 50, TMR5 */
    (uint32_t *)SPI3_IRQHandler,              /*!< 51, SPI3 */
    (uint32_t *)UART4_IRQHandler,             /*!< 52, UART4 */
    (uint32_t *)UART5_IRQHandler,             /*!< 53, UART5 */
    (uint32_t *)TMR6_IRQHandler,              /*!< 54, TMR6 */
    (uint32_t *)TMR7_IRQHandler,              /*!< 55, TMR7 */
    (uint32_t *)DMA2_Channel1_IRQHandler,     /*!< 56, DMA2 Channel1 */
    (uint32_t *)DMA2_Channel2_IRQHandler,     /*!< 57, DMA2 Channel2 */
    (uint32_t *)DMA2_Channel3_IRQHandler,     /*!< 58, DMA2 Channel3 */
    (uint32_t *)DMA2_Channel4_5_IRQHandler,   /*!< 59, DMA2 Channel4 & Channel5 */
    (uint32_t *)0,                            /*!< 60, Reserved */
    (uint32_t *)USBD2_HP_CAN2_TX_IRQHandler,  /*!< 61, USBD2 High Priority or CAN2 TX */
    (uint32_t *)USBD2_LP_CAN2_RX0_IRQHandler, /*!< 62, USBD2 Low Priority or CAN2 RX0 */
    (uint32_t *)CAN2_RX1_IRQHandler,          /*!< 63, CAN2 RX1 */
    (uint32_t *)CAN2_SCE_IRQHandler,          /*!< 64, CAN2 SCE */
{%- elif info.class == "APM32F10X_CL" %}
    (uint32_t *)&__default_stack__,           /*!< -16, Top of Stack */
    (uint32_t *)Reset_Handler,                /*!< -15, Reset Handler */
    (uint32_t *)NMI_Handler,                  /*!< -14, NMI Handler */
    (uint32_t *)HardFault_Handler,            /*!< -13, Hard Fault Handler */
    (uint32_t *)MemManage_Handler,            /*!< -12, MPU Fault Handler */
    (uint32_t *)BusFault_Handler,             /*!< -11, Bus Fault Handler */
    (uint32_t *)UsageFault_Handler,           /*!< -10, Usage Fault Handler */
    (uint32_t *)0,                            /*!< -9, Reserved */
    (uint32_t *)0,                            /*!< -8, Reserved */
    (uint32_t *)0,                            /*!< -7, Reserved */
    (uint32_t *)0,                            /*!< -6, Reserved */
    (uint32_t *)SVC_Handler,                  /*!< -5, SVCall Handler */
    (uint32_t *)DebugMon_Handler,             /*!< -4, Debug Monitor Handler */
    (uint32_t *)0,                            /*!< -3, Reserved */
    (uint32_t *)PendSV_Handler,               /*!< -2, PendSV Handler */
    (uint32_t *)SysTick_Handler,              /*!< -1, SysTick Handler */
    (uint32_t *)WWDT_IRQHandler,              /*!< 0, Window Watchdog */
    (uint32_t *)PVD_IRQHandler,               /*!< 1, PVD through EINT Line detect */
    (uint32_t *)TAMPER_IRQHandler,            /*!< 2, Tamper */
    (uint32_t *)RTC_IRQHandler,               /*!< 3, RTC */
    (uint32_t *)FLASH_IRQHandler,             /*!< 4, Flash */
    (uint32_t *)RCM_IRQHandler,               /*!< 5, RCM */
    (uint32_t *)EINT0_IRQHandler,             /*!< 6, EINT Line 0 */
    (uint32_t *)EINT1_IRQHandler,             /*!< 7, EINT Line 1 */
    (uint32_t *)EINT2_IRQHandler,             /*!< 8, EINT Line 2 */
    (uint32_t *)EINT3_IRQHandler,             /*!< 9, EINT Line 3 */
    (uint32_t *)EINT4_IRQHandler,             /*!< 10, EINT Line 4 */
    (uint32_t *)DMA1_Channel1_IRQHandler,     /*!< 11, DMA1 Channel 1 */
    (uint32_t *)DMA1_Channel2_IRQHandler,     /*!< 12, DMA1 Channel 2 */
    (uint32_t *)DMA1_Channel3_IRQHandler,     /*!< 13, DMA1 Channel 3 */
    (uint32_t *)DMA1_Channel4_IRQHandler,     /*!< 14, DMA1 Channel 4 */
    (uint32_t *)DMA1_Channel5_IRQHandler,     /*!< 15, DMA1 Channel 5 */
    (uint32_t *)DMA1_Channel6_IRQHandler,     /*!< 16, DMA1 Channel 6 */
    (uint32_t *)DMA1_Channel7_IRQHandler,     /*!< 17, DMA1 Channel 7 */
    (uint32_t *)ADC1_2_IRQHandler,            /*!< 18, ADC1 & ADC2 */
    (uint32_t *)CAN1_TX_IRQHandler,           /*!< 19, CAN1 TX */
    (uint32_t *)CAN1_RX0_IRQHandler,          /*!< 20, CAN1 RX0 */
    (uint32_t *)CAN1_RX1_IRQHandler,          /*!< 21, CAN1 RX1 */
    (uint32_t *)CAN1_SCE_IRQHandler,          /*!< 22, CAN1 SCE */
    (uint32_t *)EINT9_5_IRQHandler,           /*!< 23, EINT Line 9..5 */
    (uint32_t *)TMR1_BRK_IRQHandler,          /*!< 24, TMR1 Break */
    (uint32_t *)TMR1_UP_IRQHandler,           /*!< 25, TMR1 Update */
    (uint32_t *)TMR1_TRG_COM_IRQHandler,      /*!< 26, TMR1 Trigger and Commutation */
    (uint32_t *)TMR1_CC_IRQHandler,           /*!< 27, TMR1 Capture Compare */
    (uint32_t *)TMR2_IRQHandler,              /*!< 28, TMR2 */
    (uint32_t *)TMR3_IRQHandler,              /*!< 29, TMR3 */
    (uint32_t *)TMR4_IRQHandler,              /*!< 30, TMR4 */
    (uint32_t *)I2C1_EV_IRQHandler,           /*!< 31, I2C1 Event */
    (uint32_t *)I2C1_ER_IRQHandler,           /*!< 32, I2C1 Error */
    (uint32_t *)I2C2_EV_IRQHandler,           /*!< 33, I2C2 Event */
    (uint32_t *)I2C2_ER_IRQHandler,           /*!< 34, I2C2 Error */
    (uint32_t *)SPI1_IRQHandler,              /*!< 35, SPI1 */
    (uint32_t *)SPI2_IRQHandler,              /*!< 36, SPI2 */
    (uint32_t *)USART1_IRQHandler,            /*!< 37, USART1 */
    (uint32_t *)USART2_IRQHandler,            /*!< 38, USART2 */
    (uint32_t *)USART3_IRQHandler,            /*!< 39, USART3 */
    (uint32_t *)EINT15_10_IRQHandler,         /*!< 40, EINT Line 15..10 */
    (uint32_t *)RTC_Alarm_IRQHandler,         /*!< 41, RTC Alarm through EINT Line */
    (uint32_t *)OTG_FS_WKUP_IRQHandler,       /*!< 42, USBD Wakeup from suspend */
    (uint32_t *)0,                            /*!< 43, Reserved */
    (uint32_t *)0,                            /*!< 44, Reserved */
    (uint32_t *)0,                            /*!< 45, Reserved */
    (uint32_t *)0,                            /*!< 46, Reserved */
    (uint32_t *)0,                            /*!< 47, Reserved */
    (uint32_t *)0,                            /*!< 48, Reserved */
    (uint32_t *)0,                            /*!< 49, Reserved */
    (uint32_t *)TMR5_IRQHandler,              /*!< 50, TMR5 */
    (uint32_t *)SPI3_IRQHandler,              /*!< 51, SPI3 */
    (uint32_t *)UART4_IRQHandler,             /*!< 52, UART4 */
    (uint32_t *)UART5_IRQHandler,             /*!< 53, UART5 */
    (uint32_t *)TMR6_IRQHandler,              /*!< 54, TMR6 */
    (uint32_t *)TMR7_IRQHandler,              /*!< 55, TMR7 */
    (uint32_t *)DMA2_Channel1_IRQHandler,     /*!< 56, DMA2 Channel1 */
    (uint32_t *)DMA2_Channel2_IRQHandler,     /*!< 57, DMA2 Channel2 */
    (uint32_t *)DMA2_Channel3_IRQHandler,     /*!< 58, DMA2 Channel3 */
    (uint32_t *)DMA2_Channel4_IRQHandler,     /*!< 59, DMA2 Channel4 */
    (uint32_t *)DMA2_Channel5_IRQHandler,     /*!< 60, DMA2 Channel5 */
    (uint32_t *)ETH_IRQHandler,               /*!< 61, ETH */
    (uint32_t *)ETH_WKUP_IRQHandler,          /*!< 62, ETH Wake up */
    (uint32_t *)CAN2_TX_IRQHandler,           /*!< 63, CAN2 TX */
    (uint32_t *)CAN2_RX0_IRQHandler,          /*!< 64, CAN2 RX0 */
    (uint32_t *)CAN2_RX1_IRQHandler,          /*!< 65, CAN2 RX1 */
    (uint32_t *)CAN2_SCE_IRQHandler,          /*!< 66, CAN2 SCE */
    (uint32_t *)OTG_FS_IRQHandler,            /*!< 67, OTG FS */
{%- endif %}
};
{%  endblock %}

{%- block function_body %}

void Default_Handler(void)
{
    while (1)
    {
    }
}
{%  endblock %}
