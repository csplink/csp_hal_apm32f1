{#
 # Licensed under the GNU General Public License v. 3 (the "License")
 # You may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
 #
 #     https://www.gnu.org/licenses/gpl-3.0.html
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
 # Copyright (C) 2024-2024 xqyjlj<xqyjlj@126.com>
 #
 # @author      xqyjlj
 # @file        startup_gcc.S.j2
 #
 # Change Logs:
 # Date           Author       Notes
 # ------------   ----------   -----------------------------------------------
 # 2024-12-14     xqyjlj       initial version
 #}
/**
 * *****************************************************************************
 *  @author:            {{CSP.author}}
 *  @file:              {{CSP.file}}
 *  @brief:             {{CSP.brief}}
 *  @version:           {{CSP.version}}
 *  @hal:               {{CSP.project.vendor}}.{{CSP.project.gen.hal}}@{{ CSP.project.gen.halVersion }}
 *  @project:           {{CSP.project.name}}
 *  @targetChip:        {{CSP.project.targetChip}}
 *  @time:              {{CSP.time}}
 *
 * *****************************************************************************
 *  @attention
 *
 *  Copyright (C) {{year}} csp software.
 *  All rights reserved.
 *
 * *****************************************************************************
 */
    .syntax unified
    .cpu cortex-m3
    .fpu softvfp
    .thumb

.word __data_flash_start__
.word __data_start__
.word __data_end__
.word __bss_start__
.word __bss_end__

    .section .text.Reset_Handler
    .weak Reset_Handler
    .type Reset_Handler, %function
Reset_Handler:
    ldr r0, =__data_start__
    ldr r1, =__data_end__
    ldr r2, =__data_flash_start__
    movs r3, #0
    b l_loop_copy_data_sections

l_copy_data_sections:
    ldr r4, [r2, r3]
    str r4, [r0, r3]
    adds r3, r3, #4

l_loop_copy_data_sections:
    adds r4, r0, r3
    cmp r4, r1
    bcc l_copy_data_sections

    ldr r2, = __bss_start__
    ldr r4, = __bss_end__
    movs r3, #0
    b l_loop_clear_bss

l_clear_bss:
    str  r3, [r2]
    adds r2, r2, #4

l_loop_clear_bss:
    cmp r2, r4
    bcc l_clear_bss

    bl SystemInit
    bl __libc_init_array
    bl main
    bx lr

.size Reset_Handler, .-Reset_Handler

