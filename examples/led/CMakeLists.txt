##==< add user code begin header
##
## -----------------------------------------------------------------------------
##  @author:            csplink coder
##  @file:              CMakeLists.txt
##  @brief:             file automatically-generated by tool: [csp]
##  @coder_version:     v0.0.0.2 x v0.0.0.2
##  @hal:               Geehy.csp_hal_apm32f1
##  @hal_version:       latest
##  @project:           led
##  @time:              2024-04-25 10:31:42
##
## -----------------------------------------------------------------------------
##  @attention
##
##  Copyright (C) 2024 csplink software.
##  All rights reserved.
##
## -----------------------------------------------------------------------------
##
##==> add user code end header

############################### project settings ###############################
cmake_minimum_required(VERSION 3.7)

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)
set(CMAKE_SYSTEM_VERSION 1)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
##==< add user code begin project settings
##==> add user code end project settings

################################## toolchains ##################################
##==< add user code begin toolchains
set(CMAKE_C_COMPILER "arm-none-eabi-gcc")
set(CMAKE_C_COMPILER_WORKS TRUE)
set(CMAKE_ASM_COMPILER "arm-none-eabi-gcc")
set(CMAKE_ASM_COMPILER_WORKS TRUE)
set(CMAKE_CXX_COMPILER "arm-none-eabi-g++")
set(CMAKE_CXX_COMPILER_WORKS TRUE)
set(CMAKE_OBJCOPY "arm-none-eabi-objcopy")
set(CMAKE_OBJDUMP "arm-none-eabi-objdump")
set(CMAKE_SIZE "arm-none-eabi-size")
##==> add user code end toolchains

################################# project info #################################
##==< add user code begin project info
project(led VERSION 0.0.0 LANGUAGES ASM C)
##==> add user code end project info

##################################### flags ####################################
##==< add user code begin flags
set(CMAKE_CXX_FLAGS "-mcpu=cortex-m3 -mthumb -mthumb-interwork -ffunction-sections -fdata-sections -fno-common -fmessage-length=0 -Wall -std=c++11")
set(CMAKE_C_FLAGS "-mcpu=cortex-m3 -mthumb -mthumb-interwork -ffunction-sections -fdata-sections -fno-common -fmessage-length=0 -Wall -std=gnu99")
set(CMAKE_ASM_FLAGS "-mcpu=cortex-m3 -mthumb -mthumb-interwork -ffunction-sections -fdata-sections -fno-common -fmessage-length=0 -Wall -x assembler-with-cpp")
set(CMAKE_EXE_LINKER_FLAGS "-mcpu=cortex-m3 -mthumb -mthumb-interwork -specs=nano.specs -specs=nosys.specs -Wl,--gc-sections -Wl,--print-memory-usage -T${CMAKE_SOURCE_DIR}/APM32F103ZET6.lds -Wl,-Map=${PROJECT_BINARY_DIR}/${PROJECT_NAME}.map,--cref")
add_definitions(
    -DAPM32F10X_HD
)

if ("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
    message(STATUS "Maximum optimization for speed")
    add_compile_options(-Ofast)
elseif ("${CMAKE_BUILD_TYPE}" STREQUAL "RelWithDebInfo")
    message(STATUS "Maximum optimization for speed, debug info included")
    add_compile_options(-Ofast -g)
elseif ("${CMAKE_BUILD_TYPE}" STREQUAL "MinSizeRel")
    message(STATUS "Maximum optimization for size")
    add_compile_options(-Os)
else ()
    message(STATUS "Minimal optimization, debug info included")
    add_compile_options(-Og -g)
endif ()
##==> add user code end flags

##################################### files ####################################
set(SOURCES
    core/src/main.c
    ../../libraries/drivers/src/apm32f10x_adc.c
    ../../libraries/drivers/src/apm32f10x_bakpr.c
    ../../libraries/drivers/src/apm32f10x_can.c
    ../../libraries/drivers/src/apm32f10x_crc.c
    ../../libraries/drivers/src/apm32f10x_dac.c
    ../../libraries/drivers/src/apm32f10x_dbgmcu.c
    ../../libraries/drivers/src/apm32f10x_dma.c
    ../../libraries/drivers/src/apm32f10x_dmc.c
    ../../libraries/drivers/src/apm32f10x_eint.c
    ../../libraries/drivers/src/apm32f10x_fmc.c
    ../../libraries/drivers/src/apm32f10x_gpio.c
    ../../libraries/drivers/src/apm32f10x_i2c.c
    ../../libraries/drivers/src/apm32f10x_iwdt.c
    ../../libraries/drivers/src/apm32f10x_misc.c
    ../../libraries/drivers/src/apm32f10x_pmu.c
    ../../libraries/drivers/src/apm32f10x_qspi.c
    ../../libraries/drivers/src/apm32f10x_rcm.c
    ../../libraries/drivers/src/apm32f10x_rtc.c
    ../../libraries/drivers/src/apm32f10x_sci2c.c
    ../../libraries/drivers/src/apm32f10x_sdio.c
    ../../libraries/drivers/src/apm32f10x_smc.c
    ../../libraries/drivers/src/apm32f10x_spi.c
    ../../libraries/drivers/src/apm32f10x_tmr.c
    ../../libraries/drivers/src/apm32f10x_usart.c
    ../../libraries/drivers/src/apm32f10x_wwdt.c
    core/src/system_apm32f10x.c
    core/src/gpio.c
    startup_apm32f10x_hd.s
)
##==< add user code begin files
##==> add user code end files

set(INCLUDES
    core/inc
    ../../libraries/cmsis/inc
    ../../libraries/cmsis_core/inc
    ../../libraries/drivers/inc
)
##==< add user code begin includes
##==> add user code end includes

include_directories(${INCLUDES})
add_executable(${PROJECT_NAME}.elf ${SOURCES} ${CMAKE_SOURCE_DIR}/APM32F103ZET6.lds)

#################################### command ###################################
add_custom_command(TARGET ${PROJECT_NAME}.elf POST_BUILD
    COMMAND ${CMAKE_OBJCOPY} -O binary $<TARGET_FILE:${PROJECT_NAME}.elf> ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.bin
    COMMAND ${CMAKE_OBJCOPY} -O ihex $<TARGET_FILE:${PROJECT_NAME}.elf> ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.hex
    COMMAND ${CMAKE_SIZE} --format=berkeley $<TARGET_FILE:${PROJECT_NAME}.elf>
)
##==< add user code begin command
##==> add user code end command
